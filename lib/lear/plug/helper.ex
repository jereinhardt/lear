defmodule Lear.Plug.Helper do
  @doc """
  Return the Lear implementation module saved within the connection's private
  data under the `:lear_module` key.  Raises an error if the module is not set.
  """
  @spec fetch_module!(Plug.Conn.t(), Keyword.t()) :: module
  def fetch_module!(conn, opts \\ []) do
    conn_mod = conn.private[:lear_module]
    module = Keyword.get(opts, :module, conn_mod)

    if module, do: module, else: raise_error(:module)
  end

  @doc """
  Determines if it is safe to track a connection's data based on whether or not
  that connections was generated by a bot.
  """
  @spec safe_conn?(Plug.Conn.t(), Keyword.t()) :: boolean
  def safe_conn?(conn, opts \\ []) do
    if Keyword.get(opts, :detect_bots, true) do
      !Browser.bot?(conn)
    else
      true
    end
  end

  defp raise_error(key) do 
    raise("Config `#{key}` is missing for Lear Pipeline")
  end
end